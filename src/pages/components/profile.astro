---
import avatarSrc from '../../assets/avatar.png';
import githubSvg from '../../assets/github.svg';
import twitterSvg from '../../assets/twitter.svg';

// import sunSvg from '../../assets/sun.svg';
import moonSvg from '../../assets/moon.svg';
import { ProfileTabsList } from '../../constants';

const { activeTab } = Astro.props;
---

<style>
    .profile-container {
        @apply flex flex-col justify-center items-center fixed;
    }
    .profile-container-media {
        @apply max-[930px]:relative;
    }
    .profile-link {
        @apply flex flex-col items-center mt-4 text-sm child:text-gray-500 dark:child:text-[#d4d4d4] nlc:mb-4;
    }
    .profile-link-media {
        @apply max-[930px]:flex-row max-[930px]:nlc:mb-0 max-[930px]:nlc:mr-4;
    }
    .name {
        @apply font-bold text-lg my-4 dark:text-[#d4d4d4];
    }
    .mode {
        @apply w-20 h-20 flex flex-col items-center justify-between child:w-6 child:h-6;
    }
    .active-tab {
        @apply font-bold;
    }
</style>

<div class='profile-container profile-container-media'>
    <img src={avatarSrc} alt='avatar' class='rounded-full w-[120px] h-[120px] object-cover' />
    <p class='name'>Kobayashi</p>
    <div class='w-16 flex justify-between'>
        <a target='_blank' href='https://twitter.com/danzzzz11' class='after:hidden'>
            <img src={twitterSvg} class='w-6 h-6' alt='Twitter' />
        </a>
        <a target='_blank' href='https://github.com/KamiC6238' class='after:hidden'>
            <img src={githubSvg} class='w-6 h-6' alt='GitHub' />
        </a>
    </div>
    <div class='profile-link profile-link-media'>
        {ProfileTabsList.map(({name, href}) => (
            <a href={href} class={name === activeTab ? 'active-tab' : ''}>{name}</a>
        ))}
    </div>
    <div class='overflow-hidden max-h-8 mt-6'>
        <div class='mode'>
            <!-- <img src={sunSvg} alt='sun' /> -->
            <img class='moon' src={moonSvg} alt='moon' />
        </div>
    </div>
</div>

<script>
    // import { DARK, LIGHT } from '../../constants';
    // import {
    //     addDark,
    //     addLight,
    //     removeDark, 
    //     removeLight,
    //     getHTMLNode,
    //     getModeFromLocal,
    //     setModeToLocal,
    // } from '../../utils';

    // let degree = 0;

    // const node = document.getElementById('mode-switch');

    // const rotate = () => {
    //     if (node) {
    //         degree += 180;
    //         node.style.transform = `rotate(-${degree}deg)`
    //     }
    // }

    // const mode = getModeFromLocal();
    // mode === DARK && rotate();

    // node?.addEventListener('click', (event) => {
    //     // @ts-ignore
    //     if (event.target?.nodeName === 'IMG') {
    //         rotate();

    //         if (getHTMLNode().classList.contains(DARK)) {
    //             removeDark();
    //             addLight();
    //             setModeToLocal(LIGHT);
    //         } else {
    //             removeLight();
    //             addDark();
    //             setModeToLocal(DARK);
    //         }
    //     }
    // })
</script>