---
import avatarSrc from '../../assets/avatar.png';
import githubSvg from '../../assets/github.svg';
import twitterSvg from '../../assets/twitter.svg';

import sunSvg from '../../assets/sun.svg';
import moonSvg from '../../assets/moon.svg';
---

<style>
    #mode-switch {
        transition: .8s ease-in-out;
        transform: rotate(0deg);
    }
    #mode-switch .moon {
        transform: rotate(180deg);
    }
</style>

<div class='flex flex-col justify-center items-center'>
    <img src={avatarSrc} alt='avatar' class='rounded-full w-[120px] h-[120px] object-cover' />
    <p class='font-bold text-lg my-4 cursor dark:text-[#ecf2ff]'>Kobayashi</p>
    <div class='w-16 flex justify-between'>
        <a target='_blank' href='https://twitter.com/danzzzz11' class='after:hidden'>
            <img src={twitterSvg} class='w-6 h-6' alt='Twitter' />
        </a>
        <a target='_blank' href='https://github.com/KamiC6238' class='after:hidden'>
            <img src={githubSvg} class='w-6 h-6' alt='GitHub' />
        </a>
    </div>
    <div class='flex flex-col items-center mt-4 text-sm child:text-gray-500 dark:child:text-[#ecf2ff] nlc:mb-4'>
        <a href='/about/'>ABOUT</a>
        <a href='/essays/'>ESSAYS</a>
        <a href='/projects/'>PROJECTS</a>
    </div>
    <div class='overflow-hidden max-h-8 mt-6'>
        <div id='mode-switch' class='w-20 h-20 flex flex-col items-center justify-between child:w-6 child:h-6 child:cursor-pointer light'>
            <img src={sunSvg} alt='sun' />
            <img class='moon' src={moonSvg} alt='moon' />
        </div>
    </div>
</div>

<script>
    import { DARK, LIGHT } from '../../constants';
    import {
        addDark,
        addLight,
        removeDark, 
        removeLight,
        getHTMLNode,
        getModeFromLocal,
        setModeToLocal,
    } from '../../utils';

    let degree = 0;

    const node = document.getElementById('mode-switch');

    const rotate = () => {
        if (node) {
            degree += 180;
            node.style.transform = `rotate(-${degree}deg)`
        }
    }

    const mode = getModeFromLocal();
    mode === DARK && rotate();

    node?.addEventListener('click', (event) => {
        // @ts-ignore
        if (event.target?.nodeName === 'IMG') {
            rotate();

            if (getHTMLNode().classList.contains(DARK)) {
                removeDark();
                addLight();
                setModeToLocal(LIGHT);
            } else {
                removeLight();
                addDark();
                setModeToLocal(DARK);
            }
        }
    })
</script>